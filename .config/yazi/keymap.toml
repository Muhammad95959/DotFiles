# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

keymap = [
	{ on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selection, or cancel search" },
	{ on = "<C-[>", run = "escape",             desc = "Exit visual mode, clear selection, or cancel search" },
	{ on = "q",     run = "quit",               desc = "Quit the process" },
	{ on = "Q",     run = "quit --no-cwd-file", desc = "Quit without outputting cwd-file" },
	{ on = "<C-c>", run = "close",              desc = "Close the current tab, or quit if it's last" },
	{ on = "<C-z>", run = "suspend",            desc = "Suspend the process" },

	# Hopping
	{ on = "k", run = "arrow -1", desc = "Previous file" },
	{ on = "j", run = "arrow 1", desc = "Next file" },

	{ on = "<Up>",   run = "arrow -1", desc = "Previous file" },
	{ on = "<Down>", run = "arrow 1", desc = "Next file" },

	{ on = "<C-u>", run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<C-d>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<C-f>", run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = "<S-PageUp>",   run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<S-PageDown>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<PageUp>",     run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<PageDown>",   run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
	{ on = "G",          run = "arrow bot", desc = "Go to bottom" },

	# Navigation
	{ on = "h", run = "leave", desc = "Back to the parent directory" },
	{ on = "l", run = "enter", desc = "Enter the child directory" },

	{ on = "<Left>",  run = "leave", desc = "Back to the parent directory" },
	{ on = "<Right>", run = "enter", desc = "Enter the child directory" },

	{ on = "H", run = "back",    desc = "Back to previous directory" },
	{ on = "L", run = "forward", desc = "Forward to next directory" },

	# Toggle
	{ on = "<Space>", run = [ "toggle", "arrow 1" ], desc = "Toggle the current selection state" },
	{ on = "<C-a>",   run = "toggle_all --state=on",    desc = "Select all files" },
	{ on = "<C-r>",   run = "toggle_all",               desc = "Invert selection of all files" },

	# Visual mode
	{ on = "v", run = "visual_mode",         desc = "Enter visual mode (selection mode)" },
	{ on = "V", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },

	# Seeking
	{ on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "J", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Spotting
	{ on = "<Tab>", run = "spot", desc = "Spot hovered file" },

	# Operation
	{ on = "o",         run = "open --interactive",          desc = "Open selected files interactively" },
	{ on = "<Enter>",   run = "open",                        desc = "Open selected files" },
	{ on = "<S-Enter>", run = "open --interactive",          desc = "Open selected files interactively" },
	{ on = "y",         run = "yank",                        desc = "Yank selected files (copy)" },
	{ on = "x",         run = "yank --cut",                  desc = "Yank selected files (cut)" },
	{ on = "p",         run = "paste",                       desc = "Paste yanked files" },
	{ on = "P",         run = "paste --force",               desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = "-",         run = "link",                        desc = "Symlink the absolute path of yanked files" },
	{ on = "_",         run = "link --relative",             desc = "Symlink the relative path of yanked files" },
	{ on = "<C-->",     run = "hardlink",                    desc = "Hardlink yanked files" },
	{ on = "Y",         run = "unyank",                      desc = "Cancel the yank status" },
	{ on = "X",         run = "unyank",                      desc = "Cancel the yank status" },
	{ on = "d",         run = "remove",                      desc = "Trash selected files" },
	{ on = "D",         run = "remove --permanently",        desc = "Permanently delete selected files" },
	{ on = "a",         run = "create",                      desc = "Create a file (ends with / for directories)" },
	{ on = "r",         run = "rename --cursor=before_ext",  desc = "Rename selected file(s)" },
	{ on = ";",         run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },
	{ on = ":",         run = "shell --interactive",         desc = "Run a shell command" },
	{ on = ".",         run = "hidden toggle",               desc = "Toggle the visibility of hidden files" },
	{ on = "s",         run = "search --via=fd",             desc = "Search files by name via fd" },
	{ on = "S",         run = "search --via=rg",             desc = "Search files by content via ripgrep" },
	{ on = "<C-s>",     run = "escape --search",             desc = "Cancel the ongoing search" },
	{ on = "z",         run = "plugin zoxide",               desc = "Jump to a directory via zoxide" },
	{ on = "Z",         run = "plugin fzf",                  desc = "Jump to a file/directory via fzf" },

	# Linemode
	{ on = [ "<C-m>", "s" ], run = "linemode size",        desc = "Linemode: size" },
	{ on = [ "<C-m>", "p" ], run = "linemode permissions", desc = "Linemode: permissions" },
	{ on = [ "<C-m>", "b" ], run = "linemode btime",       desc = "Linemode: btime" },
	{ on = [ "<C-m>", "m" ], run = "linemode mtime",       desc = "Linemode: mtime" },
	{ on = [ "<C-m>", "o" ], run = "linemode owner",       desc = "Linemode: owner" },
	{ on = [ "<C-m>", "n" ], run = "linemode none",        desc = "Linemode: none" },

	# Copy
	{ on = [ "c", "p" ], run = "copy path",             desc = "Copy the file path" },
	{ on = [ "c", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
	{ on = [ "c", "n" ], run = "copy filename",         desc = "Copy the filename" },
	{ on = [ "c", "N" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

	# Filter
	{ on = "f", run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = "/", run = "find --smart",            desc = "Find next file" },
	{ on = "?", run = "find --previous --smart", desc = "Find previous file" },
	{ on = "n", run = "find_arrow",              desc = "Next found" },
	{ on = "N", run = "find_arrow --previous",   desc = "Previous found" },

	# Sorting
	{ on = [ ",", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	{ on = [ ",", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ ",", "b" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time" },
	{ on = [ ",", "B" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by birth time (reverse)" },
	{ on = [ ",", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
	{ on = [ ",", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
	{ on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
	{ on = [ ",", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
	{ on = [ ",", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
	{ on = [ ",", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
	{ on = [ ",", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
	{ on = [ ",", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },
	{ on = [ ",", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },

	# Goto
	{ on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Jump interactively" },

	# Tabs
	{ on = "t", run = "tab_create --current", desc = "Create a new tab with CWD" },

	{ on = "<C-1>", run = "tab_switch 0", desc = "Switch to first tab" },
	{ on = "<C-2>", run = "tab_switch 1", desc = "Switch to second tab" },
	{ on = "<C-3>", run = "tab_switch 2", desc = "Switch to third tab" },
	{ on = "<C-4>", run = "tab_switch 3", desc = "Switch to fourth tab" },
	{ on = "<C-5>", run = "tab_switch 4", desc = "Switch to fifth tab" },
	{ on = "<C-6>", run = "tab_switch 5", desc = "Switch to sixth tab" },
	{ on = "<C-7>", run = "tab_switch 6", desc = "Switch to seventh tab" },
	{ on = "<C-8>", run = "tab_switch 7", desc = "Switch to eighth tab" },
	{ on = "<C-9>", run = "tab_switch 8", desc = "Switch to ninth tab" },

	{ on = "[", run = "tab_switch -1 --relative", desc = "Switch to previous tab" },
	{ on = "]", run = "tab_switch 1 --relative",  desc = "Switch to next tab" },

	{ on = "{", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	{ on = "}", run = "tab_swap 1",  desc = "Swap current tab with next tab" },

	# Tasks
	{ on = "w", run = "tasks:show", desc = "Show task manager" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[tasks]

keymap = [
	{ on = "<Esc>", run = "close", desc = "Close task manager" },
	{ on = "<C-[>", run = "close", desc = "Close task manager" },
	{ on = "<C-c>", run = "close", desc = "Close task manager" },
	{ on = "w",     run = "close", desc = "Close task manager" },

	{ on = "k", run = "arrow -1", desc = "Previous task" },
	{ on = "j", run = "arrow 1", desc = "Next task" },

	{ on = "<Up>",   run = "arrow -1", desc = "Previous task" },
	{ on = "<Down>", run = "arrow 1", desc = "Next task" },

	{ on = "<Enter>", run = "inspect", desc = "Inspect the task" },
	{ on = "x",       run = "cancel",  desc = "Cancel the task" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[spot]

keymap = [
	{ on = "<Esc>", run = "close", desc = "Close the spot" },
	{ on = "<C-[>", run = "close", desc = "Close the spot" },
	{ on = "<C-c>", run = "close", desc = "Close the spot" },
	{ on = "<Tab>", run = "close", desc = "Close the spot" },

	{ on = "k", run = "arrow -1", desc = "Previous line" },
	{ on = "j", run = "arrow 1", desc = "Next line" },
	{ on = "h", run = "swipe prev", desc = "Swipe to previous file" },
	{ on = "l", run = "swipe next", desc = "Swipe to next file" },

	{ on = "<Up>",    run = "arrow -1", desc = "Previous line" },
	{ on = "<Down>",  run = "arrow 1", desc = "Next line" },
	{ on = "<Left>",  run = "swipe prev", desc = "Swipe to previous file" },
	{ on = "<Right>", run = "swipe next", desc = "Swipe to next file" },

	# Copy
	{ on = [ "c", "c" ], run = "copy cell", desc = "Copy selected cell" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[pick]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel pick" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel pick" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel pick" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the pick" },

	{ on = "k", run = "arrow -1", desc = "Previous option" },
	{ on = "j", run = "arrow 1", desc = "Next option" },

	{ on = "<Up>",   run = "arrow -1", desc = "Previous option" },
	{ on = "<Down>", run = "arrow 1", desc = "Next option" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[input]

keymap = [
	{ on = "<C-c>",   run = "escape",         desc = "Back to normal mode, or cancel input" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit input" },
	{ on = "<Esc>",   run = "close",          desc = "Cancel input" },
	{ on = "<C-[>",   run = "escape",         desc = "Back to normal mode, or cancel input" },

	# Mode
	{ on = "i", run = "insert",                          desc = "Enter insert mode" },
	{ on = "I", run = [ "move first-char", "insert" ],   desc = "Move to the BOL, and enter insert mode" },
	{ on = "a", run = "insert --append",                 desc = "Enter append mode" },
	{ on = "A", run = [ "move eol", "insert --append" ], desc = "Move to the EOL, and enter append mode" },
	{ on = "v", run = "visual",                          desc = "Enter visual mode" },
	{ on = "r", run = "replace",                         desc = "Replace a single character" },

	# Selection
	{ on = "V",     run = [ "move bol", "visual", "move eol" ], desc = "Select from BOL to EOL" },
	{ on = "<C-A>", run = [ "move eol", "visual", "move bol" ], desc = "Select from EOL to BOL" },
	{ on = "<C-E>", run = [ "move bol", "visual", "move eol" ], desc = "Select from BOL to EOL" },

	# Character-wise movement
	{ on = "h",       run = "move -1", desc = "Move back a character" },
	{ on = "l",       run = "move 1",  desc = "Move forward a character" },
	{ on = "<Left>",  run = "move -1", desc = "Move back a character" },
	{ on = "<Right>", run = "move 1",  desc = "Move forward a character" },
	{ on = "<C-b>",   run = "move -1", desc = "Move back a character" },
	{ on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = "b",     run = "backward",                    desc = "Move back to the start of the current or previous word" },
	{ on = "B",     run = "backward --far",              desc = "Move back to the start of the current or previous WORD" },
	{ on = "w",     run = "forward",                     desc = "Move forward to the start of the next word" },
	{ on = "W",     run = "forward --far",               desc = "Move forward to the start of the next WORD" },
	{ on = "e",     run = "forward --end-of-word",       desc = "Move forward to the end of the current or next word" },
	{ on = "E",     run = "forward --far --end-of-word", desc = "Move forward to the end of the current or next WORD" },
	{ on = "<A-b>", run = "backward",                    desc = "Move back to the start of the current or previous word" },
	{ on = "<A-f>", run = "forward --end-of-word",       desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = "0",      run = "move bol",        desc = "Move to the BOL" },
	{ on = "$",      run = "move eol",        desc = "Move to the EOL" },
	{ on = "_",      run = "move first-char", desc = "Move to the first non-whitespace character" },
	{ on = "^",      run = "move first-char", desc = "Move to the first non-whitespace character" },
	{ on = "<C-a>",  run = "move bol",        desc = "Move to the BOL" },
	{ on = "<C-e>",  run = "move eol",        desc = "Move to the EOL" },
	{ on = "<Home>", run = "move bol",        desc = "Move to the BOL" },
	{ on = "<End>",  run = "move eol",        desc = "Move to the EOL" },

	# Delete
	{ on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = "d", run = "delete --cut",                              desc = "Cut selected characters" },
	{ on = "D", run = [ "delete --cut", "move eol" ],              desc = "Cut until EOL" },
	{ on = "c", run = "delete --cut --insert",                     desc = "Cut selected characters, and enter insert mode" },
	{ on = "C", run = [ "delete --cut --insert", "move eol" ],     desc = "Cut until EOL, and enter insert mode" },
	{ on = "x", run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut current character" },
	{ on = "y", run = "yank",                                      desc = "Copy selected characters" },
	{ on = "p", run = "paste",                                     desc = "Paste copied characters after the cursor" },
	{ on = "P", run = "paste --before",                            desc = "Paste copied characters before the cursor" },

	# Undo/Redo
	{ on = "u",     run = "undo", desc = "Undo the last operation" },
	{ on = "<C-r>", run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[confirm]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

	{ on = "n", run = "close",          desc = "Cancel the confirm" },
	{ on = "y", run = "close --submit", desc = "Submit the confirm" },

	{ on = "k", run = "arrow -1", desc = "Previous line" },
	{ on = "j", run = "arrow 1", desc = "Next line" },

	{ on = "<Up>",   run = "arrow -1", desc = "Previous line" },
	{ on = "<Down>", run = "arrow 1", desc = "Next line" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[cmp]

keymap = [
	{ on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },
	{ on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
	{ on = "<Enter>", run = [ "close --submit", "input:close --submit" ], desc = "Complete and submit the input" },

	{ on = "<A-k>", run = "arrow -1", desc = "Previous item" },
	{ on = "<A-j>", run = "arrow 1", desc = "Next item" },

	{ on = "<Up>",   run = "arrow -1", desc = "Previous item" },
	{ on = "<Down>", run = "arrow 1", desc = "Next item" },

	{ on = "<C-p>", run = "arrow -1", desc = "Previous item" },
	{ on = "<C-n>", run = "arrow 1", desc = "Next item" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[help]

keymap = [
	{ on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "q",     run = "close",  desc = "Hide the help" },
	{ on = "<C-c>", run = "close",  desc = "Hide the help" },

	# Navigation
	{ on = "k", run = "arrow -1", desc = "Previous line" },
	{ on = "j", run = "arrow 1", desc = "Next line" },

	{ on = "<Up>",   run = "arrow -1", desc = "Previous line" },
	{ on = "<Down>", run = "arrow 1", desc = "Next line" },

	# Filtering
	{ on = "f", run = "filter", desc = "Filter help items" },
]

### My additions
[[manager.prepend_keymap]]
on   = "!"
run  = 'shell "$SHELL" --block --confirm'
desc = "Open shell here"
[[manager.prepend_keymap]]
on   = "<Enter>"
run  = "plugin smart-enter"
desc = "Enter the child directory, or open the file"
[[manager.prepend_keymap]]
on  = [ "<A-Space>", "d" ]
run = '''
	shell 'setsid dragon-drop -a -x "$@" &' --confirm
'''
desc = "dragon-drop"
[[manager.prepend_keymap]]
on  = [ "<A-Space>", "w" ]
run = '''
	shell '[ $(echo $XDG_SESSION_TYPE) = "wayland" ] && swww img "$@" -t "fade" --transition-duration 2 || feh --no-fehbg --bg-fill "$@"' --confirm
'''
desc = "set background"
[[manager.prepend_keymap]]
on  = [ "<A-Space>", "u" ]
run = '''
	shell 'umount "$@"' --confirm
'''
desc = "umount"
[[manager.prepend_keymap]]
on  = [ "<A-Space>", "l" ]
run = '''
	shell '~/Scripts/calculate_videos_length.sh "$@"' --confirm
'''
desc = "videos-length"
[[manager.prepend_keymap]]
on  = [ "<A-Space>", "i" ]
run = '''
  shell 'notify-send -t 7500 "$(exiftool "$@" | grep -E "^Duration *:" || exiftool "$@" | grep -E "^Page Count *:" || exiftool "$@" | grep "^Image Size *:")"' --confirm
'''
desc = "info"

### My bookmarks
[[manager.prepend_keymap]]
on   = [ "g", "d", "<Enter>" ]
run  = "cd /home/muhammad/Disk_D"
desc = "Cd to /home/muhammad/Disk_D"
[[manager.prepend_keymap]]
on   = [ "g", "d", "a" ]
run  = "cd /home/muhammad/Disk_D/برامج"
desc = "Cd to /home/muhammad/Disk_D/برامج"
[[manager.prepend_keymap]]
on   = [ "g", "d", "b" ]
run  = "cd /mnt/Disk_D/Backgrounds"
desc = "Cd to /mnt/Disk_D/Backgrounds"
[[manager.prepend_keymap]]
on   = [ "g", "d", "d" ]
run  = "cd /mnt/Disk_D/مستندات"
desc = "Cd to /mnt/Disk_D/مستندات"
[[manager.prepend_keymap]]
on   = [ "g", "d", "e" ]
run  = "cd /mnt/Disk_D/تعليمي"
desc = "Cd to /mnt/Disk_D/تعليمي"
[[manager.prepend_keymap]]
on   = [ "g", "d", "g" ]
run  = "cd /mnt/Disk_D/Engineering"
desc = "Cd to /mnt/Disk_D/Engineering"
[[manager.prepend_keymap]]
on   = [ "g", "d", "i" ]
run  = "cd /mnt/Disk_D/إسلاميات"
desc = "Cd to /mnt/Disk_D/إسلاميات"
[[manager.prepend_keymap]]
on   = [ "g", "d", "l" ]
run  = "cd /mnt/Disk_D/Muhammad/Linux_stuff"
desc = "Cd to /mnt/Disk_D/Muhammad/Linux_stuff"
[[manager.prepend_keymap]]
on   = [ "g", "d", "m" ]
run  = "cd /mnt/Disk_D/Muhammad"
desc = "Cd to /mnt/Disk_D/Muhammad"
[[manager.prepend_keymap]]
on   = [ "g", "d", "n" ]
run  = "cd /mnt/Disk_D/Muhammad/My_Documents"
desc = "Cd to /mnt/Disk_D/Muhammad/My_Documents"
[[manager.prepend_keymap]]
on   = [ "g", "d", "p" ]
run  = "cd '/mnt/Disk_D/Projects & Designs'"
desc = "Cd to /mnt/Disk_D/Projects & Designs"
[[manager.prepend_keymap]]
on   = [ "g", "d", "q" ]
run  = "cd /mnt/Disk_D/قرآن_كريم"
desc = "Cd to /mnt/Disk_D/قرآن_كريم"
[[manager.prepend_keymap]]
on   = [ "g", "d", "r" ]
run  = "cd /mnt/Disk_D/Muhammad/Repositories"
desc = "Cd to /mnt/Disk_D/Muhammad/Repositories"
[[manager.prepend_keymap]]
on   = [ "g", "d", "t" ]
run  = "cd /mnt/Disk_D/نغمات"
desc = "Cd to /mnt/Disk_D/نغمات"
[[manager.prepend_keymap]]
on   = [ "g", "h", "<Enter>" ]
run  = "cd /home/muhammad"
desc = "Cd to /home/muhammad"
[[manager.prepend_keymap]]
on   = [ "g", "h", "P" ]
run  = "cd /home/muhammad/Projects"
desc = "Cd to /home/muhammad/Projects"
[[manager.prepend_keymap]]
on   = [ "g", "h", "a" ]
run  = "cd /home/muhammad/.ASProjects"
desc = "Cd to /home/muhammad/.ASProjects"
[[manager.prepend_keymap]]
on   = [ "g", "h", "c" ]
run  = "cd /home/muhammad/.config"
desc = "Cd to /home/muhammad/.config"
[[manager.prepend_keymap]]
on   = [ "g", "h", "d" ]
run  = "cd /home/muhammad/Downloads"
desc = "Cd to /home/muhammad/Downloads"
[[manager.prepend_keymap]]
on   = [ "g", "h", "f" ]
run  = "cd /home/muhammad/.fonts"
desc = "Cd to /home/muhammad/.fonts"
[[manager.prepend_keymap]]
on   = [ "g", "h", "i" ]
run  = "cd /home/muhammad/.IdeaProjects"
desc = "Cd to /home/muhammad/.IdeaProjects"
[[manager.prepend_keymap]]
on   = [ "g", "h", "l" ]
run  = "cd /home/muhammad/.local/share"
desc = "Cd to /home/muhammad/.local/share"
[[manager.prepend_keymap]]
on   = [ "g", "h", "p" ]
run  = "cd /home/muhammad/Pictures"
desc = "Cd to /home/muhammad/Pictures"
[[manager.prepend_keymap]]
on   = [ "g", "h", "s" ]
run  = "cd /home/muhammad/Scripts"
desc = "Cd to /home/muhammad/Scripts"
[[manager.prepend_keymap]]
on   = [ "g", "m" ]
run  = "cd /run/media/muhammad"
desc = "Cd to /run/media/muhammad"
[[manager.prepend_keymap]]
on   = [ "g", "s" ]
run  = "cd '/mnt/Disk_D/Virtual Machines/Share'"
desc = "Cd to /mnt/Disk_D/Virtual Machines/Share"

### relative-motions plugin
[[manager.prepend_keymap]]
on = [ "1" ]
run = "plugin relative-motions 1"
desc = "Move in relative steps"
[[manager.prepend_keymap]]
on = [ "2" ]
run = "plugin relative-motions 2"
desc = "Move in relative steps"
[[manager.prepend_keymap]]
on = [ "3" ]
run = "plugin relative-motions 3"
desc = "Move in relative steps"
[[manager.prepend_keymap]]
on = [ "4" ]
run = "plugin relative-motions 4"
desc = "Move in relative steps"
[[manager.prepend_keymap]]
on = [ "5" ]
run = "plugin relative-motions 5"
desc = "Move in relative steps"
[[manager.prepend_keymap]]
on = [ "6" ]
run = "plugin relative-motions 6"
desc = "Move in relative steps"
[[manager.prepend_keymap]]
on = [ "7" ]
run = "plugin relative-motions 7"
desc = "Move in relative steps"
[[manager.prepend_keymap]]
on = [ "8" ]
run = "plugin relative-motions 8"
desc = "Move in relative steps"
[[manager.prepend_keymap]]
on = [ "9" ]
run = "plugin relative-motions 9"
desc = "Move in relative steps"

### bookmarks plugin
[[manager.prepend_keymap]]
on = [ "m" ]
run = "plugin bookmarks save"
desc = "Save current position as a bookmark"
[[manager.prepend_keymap]]
on = [ "'" ]
run = "plugin bookmarks jump"
desc = "Jump to a bookmark"
[[manager.prepend_keymap]]
on = [ "b", "d" ]
run = "plugin bookmarks delete"
desc = "Delete a bookmark"
[[manager.prepend_keymap]]
on = [ "b", "D" ]
run = "plugin bookmarks delete_all"
desc = "Delete all bookmarks"

### toggle-pane plugin
[[manager.prepend_keymap]]
on   = "T"
run  = "plugin toggle-pane max-current"
desc = "Show or hide the preview pane"
[[manager.prepend_keymap]]
on   = "I"
run  = "plugin toggle-pane max-preview"
desc = "Maximize or restore the preview pane"

### open-with-cmd plugin
[[manager.prepend_keymap]]
on   = "O"
run  = "plugin open-with-cmd"
desc = "Open with command"

### ouch plugin
[[manager.prepend_keymap]]
on   = [ "<A-Space>", "a" ]
run = "plugin ouch"
desc = "Compress with ouch"

### what-size plugin
[[manager.prepend_keymap]]
on   = [ "<A-Space>", "s" ]
run  = "plugin what-size"
desc = "Calc size of selection or cwd"

### chmod plugin
[[manager.prepend_keymap]]
on   = [ "<A-Space>", "c" ]
run  = "plugin chmod"
desc = "Chmod on selected files"

### mount plugin
[[manager.prepend_keymap]]
on  = "M"
run = "plugin mount"

### simple-tag plugin
[[manager.prepend_keymap]]
on = [ "`", "i" ]
run = "plugin simple-tag -- toggle-tag --input"
desc = "Toggle tag(s) with value from (input box)"
[[manager.prepend_keymap]]
on = [ "`", "d" ]
run = "plugin simple-tag -- toggle-tag --key=1"
desc = "Toggle tag with fixed tag key = 1"
